<?php

namespace App;

use Illuminate\Support\Facades\DB;
use Illuminate\Database\Eloquent\Model;

Class Negara extends Model
{

    {
        

        protected $table = "a_negara";
        $this->field_desc = "nama";

        protected $fillable = [
            "nama",
            "id_continent",
            "iso3",
            "mcc",
            "notes",
        ];
//region select_fields
        $select_fields = [];
        $one = new JQSelect("a.id");
        $select_fields[] = $one;

        $one = new JQSelect("a.nama");
        $select_fields[] = $one;

        $one = new JQSelect("a.id_continent");
        $select_fields[] = $one;

        $one = new JQSelect("a.iso3");
        $select_fields[] = $one;

        $one = new JQSelect("a.mcc");
        $select_fields[] = $one;

        $one = new JQSelect("a.notes");
        $select_fields[] = $one;

        $one = new JQSelect("b.nama", "nama_continent");
        $select_fields[] = $one;

        $this->select_fields = $select_fields;
        //endregion select_fields

        //region search_fields
        $search_fields = [
            "a.nama",
            "b.nama",
        ];
        $this->search_fields = $search_fields;
        //endregion select_fields

        $this->timestamps = true;

        //region the fields
        //here you can set the: fields, rules, etc
        $fields = array();
        $one = new JQFields("id", "ID");
        $fields[] = $one;

        $one = new JQFields("nama", "Nama");
        $one->setInputRules("bail|sometimes|required|max:50|is_unique:$this->table,$this->field_id!={id} and :attribute='{value}'");
        $fields[] = $one;

        $one = new JQFields("id_continent", "Continent", JQFIELDS_INPUT_TYPE_SELECT);
        $one->setInputRelModelName("AContinent");
        $one->setDisplayFieldToShow("nama_continent");
        $fields[] = $one;

		$one = new JQFields("mcc", "MCC");
        $one->setInputRules("max:50");
        $fields[] = $one;

		$one = new JQFields("iso3", "ISO3");
        $one->setInputRules("max:50");
        $fields[] = $one;

        $one = new JQFields("notes", "Remark", JQFIELDS_INPUT_TYPE_TEXTAREA);
        $one->setListIsVisible(false);
        $one->setInputRules("max:250");
        $fields[] = $one;

//
//        $one = new JQFields("_RoamingPartner", "Roaming Partner", JQFIELDS_INPUT_TYPE_CHECK_MULTIPLE);
//        $one->setListIsVisible(false);
//        $one->setInputIsGenerateInput(false);
//        $one->setInputRelMultipleFunctionToGetData("get_roaming_partner_by_id");
//        $fields[] = $one;


        $this->the_fields = $fields;
        //endregion the fields

    }
    //custom, join
    public function get_model()
    {
        $model = DB::table("$this->table AS a");
        $model->leftJoin("a_continent AS b", "b.id", "=", "a.id_continent");

        return $model;
    }

    public function save_roaming_partner($id, $data_batch) {
        $id_negara = $id;

        $ok = 0;
        $msg = "";
        try {
            $table = "a_negara_roaming_partner";
            DB::table($table)->where("id_negara", $id_negara)->delete();

            if($data_batch) {
                DB::table($table)->insert($data_batch);
            }
            $ok = 1;
        } catch (\Exception $e) {
            $msg = $e->getMessage();
        }

        $data = array();
        $data["ok"] = $ok;
        $data["msg"] = $msg;

        return $data;
    }

    public function get_roaming_partner_by_id($id) {
        $table = "a_negara_roaming_partner";
        $model = DB::table("$table AS a");
        $model->join("a_roaming_partner AS b", "b.id", "=", "a.id_roaming_partner");
        $model->join("a_opsi_roaming_partner AS c", "c.id", "=", "a.id_opsi_roaming_partner");
        $model->where("a.id_negara", $id);
        $select = [
            "a.*",
            "b.nama as nama_roaming_partner",
            "c.nama as nama_opsi_roaming_partner",
        ];
        $master = $model->get($select);

        return $master;
    }

    public function get_by_id($id)
    {
        $master = parent::get_by_id($id); // TODO: Change the autogenerated stub
        if($master) {
            $roaming_partner = $this->get_roaming_partner_by_id($id);

            $master->_RoamingPartner = $roaming_partner;
        }

        return $master;
    }
}
